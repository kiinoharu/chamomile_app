{"ast":null,"code":"var _jsxFileName = \"/Users/koume/projects/chamomile_app/frontend/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userId, setUserId] = useState(null); // ユーザーIDを管理\n\n  const login = id => {\n    setIsAuthenticated(true);\n    setUserId(id);\n  };\n  const logout = () => {\n    setIsAuthenticated(false);\n    setUserId(null);\n  };\n  const guestLogin = () => {\n    setIsAuthenticated(true);\n    setUserId(1); // ゲスト用のユーザーID\n    console.log(\"ゲストとしてログインしました\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      userId,\n      login,\n      logout,\n      guestLogin\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"wKT3VsORbUlzRVoLAZF8aqWO+7Q=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","userId","setUserId","login","id","logout","guestLogin","console","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/koume/projects/chamomile_app/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode } from 'react';\n\ninterface AuthContextType {\n  isAuthenticated: boolean;\n  userId: number | null;\n  login: (id: number) => void;\n  logout: () => void;\n  guestLogin: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\n  const [userId, setUserId] = useState<number | null>(null); // ユーザーIDを管理\n\n  const login = (id: number) => {\n    setIsAuthenticated(true);\n    setUserId(id);\n  };\n\n  const logout = () => {\n    setIsAuthenticated(false);\n    setUserId(null);\n  };\n\n  const guestLogin = () => {\n    setIsAuthenticated(true);\n    setUserId(1); // ゲスト用のユーザーID\n    console.log(\"ゲストとしてログインしました\");\n  };\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, userId, login, logout, guestLogin }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU9E,MAAMC,WAAW,gBAAGL,aAAa,CAA8BM,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAA+C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/E,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAU,KAAK,CAAC;EACtE,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAgB,IAAI,CAAC,CAAC,CAAC;;EAE3D,MAAMY,KAAK,GAAIC,EAAU,IAAK;IAC5BJ,kBAAkB,CAAC,IAAI,CAAC;IACxBE,SAAS,CAACE,EAAE,CAAC;EACf,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBL,kBAAkB,CAAC,KAAK,CAAC;IACzBE,SAAS,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,MAAMI,UAAU,GAAGA,CAAA,KAAM;IACvBN,kBAAkB,CAAC,IAAI,CAAC;IACxBE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IACdK,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EAC/B,CAAC;EACD,oBACEf,OAAA,CAACC,WAAW,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEX,eAAe;MAAEE,MAAM;MAAEE,KAAK;MAAEE,MAAM;MAAEC;IAAW,CAAE;IAAAT,QAAA,EACjFA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAChB,EAAA,CAxBWF,YAA+C;AAAAmB,EAAA,GAA/CnB,YAA+C;AA0B5D,OAAO,MAAMoB,OAAO,GAAGA,CAAA,KAAuB;EAAAC,GAAA;EAC5C,MAAMC,OAAO,GAAG5B,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACwB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}